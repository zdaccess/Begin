package edu.school21.annotations.classes;

import edu.school21.annotations.HtmlInput;
import edu.school21.annotations.HtmlForm;

@HtmlForm(fileName = "user_form.html", action = "/users", method = "post")
public class UserForm {
    @HtmlInput(type = "text", name = "first_name", placeholder = "Enter First Name")
    private String firstName;

    @HtmlInput(type = "text", name = "last_name", placeholder = "Enter Last Name")
    private String lastName;

    @HtmlInput(type = "password", name = "password", placeholder = "Enter Password")
    private String password;
}

package edu.school21.annotations;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(RetentionPolicy.CLASS)
@Target(ElementType.FIELD)
public @interface HtmlInput {
    public String type();
    public String name();
    public String placeholder();
}
package edu.school21.annotations;

import com.google.auto.service.AutoService;
import javax.annotation.processing.*;
import javax.lang.model.SourceVersion;
import javax.lang.model.element.Element;
import javax.lang.model.element.TypeElement;
import javax.tools.StandardLocation;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Set;
import javax.annotation.processing.Processor;
//import edu.school21.annotations.interfaces.HtmlForm;
//import edu.school21.annotations.interfaces.HtmlInput;
@SupportedAnnotationTypes("edu.school21.annotations.HtmlForm")
@SupportedSourceVersion(SourceVersion.RELEASE_8)
@AutoService(Processor.class)

public class HtmlProcessor extends AbstractProcessor {

    @Override
    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
        Set<? extends Element> annotation = roundEnv.getElementsAnnotatedWith(
                HtmlForm.class);
        for (Element anno : annotation) {
            HtmlForm htmlForm = anno.getAnnotation(HtmlForm.class);
            String formAction = htmlForm.action();
            String formMethod = htmlForm.method();
            String formFileName = htmlForm.fileName();
            File file = new File("target/" + formFileName);
            try (FileWriter fileWriter = new FileWriter(file)) {
                fileWriter.write(formAction);
            } catch (IOException e) {
                throw new RuntimeException(e);
            }

            return true;
        }
        return true;
    }
}
